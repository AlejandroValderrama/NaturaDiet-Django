# Generated by Django 2.2.12 on 2021-05-31 22:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Caloria',
            fields=[
                ('id_caloria', models.AutoField(db_column='ID_CALORIA', primary_key=True, serialize=False)),
                ('persona', models.CharField(db_column='PERSONA', max_length=30)),
                ('genero', models.CharField(db_column='GENERO', max_length=30)),
                ('edad_min', models.IntegerField(blank=True, db_column='EDAD_MIN', null=True)),
                ('edad_max', models.IntegerField(blank=True, db_column='EDAD_MAX', null=True)),
                ('calorias', models.IntegerField(blank=True, db_column='CALORIAS', null=True)),
            ],
            options={
                'db_table': 'CALORIA',
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.AutoField(db_column='ID_CATEGORIA', primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'CATEGORIA',
            },
        ),
        migrations.CreateModel(
            name='Dieta',
            fields=[
                ('id_dieta', models.AutoField(db_column='ID_DIETA', primary_key=True, serialize=False)),
                ('lunes', models.TextField(db_column='LUNES')),
                ('martes', models.TextField(db_column='MARTES')),
                ('miercoles', models.TextField(db_column='MIERCOLES')),
                ('jueves', models.TextField(db_column='JUEVES')),
                ('viernes', models.TextField(db_column='VIERNES')),
                ('sabado', models.TextField(db_column='SABADO')),
                ('domingo', models.TextField(db_column='DOMINGO')),
                ('kcal', models.ForeignKey(db_column='KCAL', on_delete=django.db.models.deletion.CASCADE, to='NaturadietApp.Caloria')),
            ],
            options={
                'db_table': 'DIETA',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id_estado', models.AutoField(db_column='ID_ESTADO', primary_key=True, serialize=False)),
                ('minimo', models.DecimalField(db_column='MINIMO', decimal_places=1, max_digits=3)),
                ('maximo', models.DecimalField(db_column='MAXIMO', decimal_places=1, max_digits=3)),
                ('tipo', models.CharField(db_column='TIPO', max_length=45)),
            ],
            options={
                'db_table': 'ESTADO',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id_producto', models.AutoField(db_column='ID_PRODUCTO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=255)),
                ('imagen', models.ImageField(db_column='IMAGEN', upload_to='Productos')),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=255, null=True)),
                ('tipo', models.CharField(choices=[('LACTEOS', 'Lacteos'), ('CARNES', 'Carnes'), ('PESCADOS', 'Pescados'), ('FRUTAS', 'Frutas'), ('VERDURAS', 'Verduras'), ('BOLLERIA', 'Bolleria')], db_column='TIPO', default=('LACTEOS', 'Lacteos'), max_length=8)),
                ('precio', models.DecimalField(db_column='PRECIO', decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'PRODUCTO',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id_rol', models.AutoField(db_column='ID_ROL', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=45)),
            ],
            options={
                'db_table': 'ROL',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('edad', models.IntegerField(db_column='EDAD', null=True)),
                ('dni', models.CharField(db_column='DNI', max_length=11, null=True)),
                ('telefono', models.CharField(db_column='TELEFONO', max_length=12, null=True)),
                ('direccion', models.CharField(db_column='DIRECCION', max_length=50, null=True)),
                ('localidad', models.CharField(db_column='LOCALIDAD', max_length=50, null=True)),
                ('provincia', models.CharField(db_column='PROVINCIA', max_length=50, null=True)),
                ('cp', models.CharField(db_column='CP', max_length=5, null=True)),
                ('peso', models.IntegerField(db_column='PESO', null=True)),
                ('altura', models.DecimalField(db_column='ALTURA', decimal_places=2, max_digits=3, null=True)),
                ('imc', models.DecimalField(blank=True, db_column='IMC', decimal_places=1, max_digits=3, null=True)),
                ('genero', models.CharField(choices=[('HOMBRE', 'Hombre'), ('MUJER', 'Mujer')], db_column='GENERO', default=('HOMBRE', 'Hombre'), max_length=30, null=True)),
                ('dieta', models.ForeignKey(blank=True, db_column='DIETA', null=True, on_delete=django.db.models.deletion.CASCADE, to='NaturadietApp.Dieta')),
                ('estado', models.ForeignKey(blank=True, db_column='ESTADO', null=True, on_delete=django.db.models.deletion.CASCADE, to='NaturadietApp.Estado')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('rol', models.ForeignKey(db_column='ROL', null=True, on_delete=django.db.models.deletion.CASCADE, to='NaturadietApp.Rol')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'USUARIO',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id_pedido', models.AutoField(db_column='ID_PEDIDO', primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(auto_now_add=True, db_column='FECHA')),
                ('producto', models.ForeignKey(db_column='PRODUCTO', on_delete=django.db.models.deletion.CASCADE, to='NaturadietApp.Producto')),
                ('usuario', models.ForeignKey(db_column='USUARIO', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PEDIDO',
            },
        ),
        migrations.CreateModel(
            name='Noticia',
            fields=[
                ('id_noticia', models.AutoField(db_column='ID_NOTICIA', primary_key=True, serialize=False)),
                ('titulo', models.CharField(db_column='TITULO', max_length=255)),
                ('subtitulo', models.CharField(db_column='SUBTITULO', max_length=255)),
                ('imagen', models.ImageField(db_column='IMAGEN', upload_to='Noticias')),
                ('contenido', models.TextField(db_column='CONTENIDO')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now_add=True)),
                ('categoria', models.ForeignKey(db_column='CATEGORIA', on_delete=django.db.models.deletion.CASCADE, to='NaturadietApp.Categoria')),
                ('usuario', models.ForeignKey(db_column='USUARIO', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'NOTICIA',
            },
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importe', models.DecimalField(blank=True, db_column='IMPORTE', decimal_places=2, max_digits=5, null=True)),
                ('cantidad', models.IntegerField(blank=True, db_column='CANTIDAD', null=True)),
                ('pedido', models.ForeignKey(db_column='PEDIDO', on_delete=django.db.models.deletion.CASCADE, to='NaturadietApp.Pedido')),
                ('producto', models.ForeignKey(db_column='PRODUCTO', on_delete=django.db.models.deletion.CASCADE, to='NaturadietApp.Producto')),
            ],
            options={
                'db_table': 'FACTURA',
                'unique_together': {('pedido', 'producto')},
            },
        ),
    ]
